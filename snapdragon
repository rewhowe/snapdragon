#!/usr/bin/env ruby
VERSION = '0.0.0'.freeze

require_relative 'src/interpreter/processor'
require_relative 'src/tokenizer/lexer'
require_relative 'src/tokenizer/reader'
require_relative 'src/errors'
require_relative 'src/util/logger'
require_relative 'src/util/options'
require_relative 'src/util/token_printer'

options = Util::Options.parse_arguments

abort VERSION if options[:version]

Util::Logger.setup options
Util::Logger.debug Util::Options::DEBUG_3, options

reader = Tokenizer::Reader.new options
lexer  = Tokenizer::Lexer.new reader, options

begin
  if options[:tokens]
    Util::TokenPrinter.print_all lexer, options
    exit
  end

  processor = Interpreter::Processor.new lexer, options
  result = processor.execute
  exit result.result_code if result.is_a? Interpreter::ReturnValue
rescue => e
  raise e if options[:debug] != Util::Options::DEBUG_OFF
  if e.is_a? Errors::BaseError
    puts e.message
    abort
  end
  abort 'An unknown error occurred.'
end
