#!/usr/bin/env ruby

require_relative 'src/colour_string'
require_relative 'src/tokenizer/lexer'
require_relative 'src/tokenizer/reader'
require_relative 'src/tokenizer/errors'
require_relative 'src/util/logger'
require_relative 'src/util/options'

options = Util::Options.parse_arguments

Util::Logger.setup options

reader = Tokenizer::Reader.new options
lexer  = Tokenizer::Lexer.new reader, options

# TODO: send tokens to transpiler... also find a better name for transpiler

tokens = []
loop do
  begin
    token = lexer.next_token
    break if token.nil?
    tokens << token
  rescue Tokenizer::Errors::BaseError => e
    raise e if options[:debug]
    puts e.message
    exit
  end
end

if options[:tokens]
  tokens.each { |t| puts t.type.to_s.blue + ' ' + t.content.to_s + ' ' + t.sub_type.to_s.blue }
  exit
end
