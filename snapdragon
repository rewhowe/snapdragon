#!/usr/bin/env ruby

require_relative 'src/colour_string.rb'
require_relative 'src/tokenizer/lexer.rb'

options = {
  debug: false,
}

filename = nil

ARGV.each do |arg|
  case arg
  when '-d', '--debug'
    options[:debug] = true
  when '-t', '--tokens'
    options[:tokens] = true
  else
    filename = arg if (arg =~ /^-/).nil? && filename.nil?
  end
end

raise "Input file (#{filename}) not found" if filename.nil? || !File.exist?(filename)

tokens = Tokenizer::Lexer.new(options).tokenize(filename)

if options[:tokens]
  tokens.each { |token| puts token.type.to_s.blue + ' ' + token.content.to_s }
end
# TODO: send tokens to transpiler... also find a better name for transpiler
