#!/usr/bin/env ruby
VERSION = '0.0.0'.freeze

require_relative 'src/colour_string'
require_relative 'src/interpreter/processor'
require_relative 'src/tokenizer/lexer'
require_relative 'src/tokenizer/reader'
require_relative 'src/tokenizer/errors'
require_relative 'src/util/logger'
require_relative 'src/util/options'
require_relative 'src/util/token_printer'

options = Util::Options.parse_arguments

abort VERSION if options[:version]

Util::Logger.setup options
Util::Logger.debug Util::Options::DEBUG_3, options

reader = Tokenizer::Reader.new options
lexer  = Tokenizer::Lexer.new reader, options

if options[:tokens]
  Util::TokenPrinter.print_all lexer, options
  exit
end

processor = Interpreter::Processor.new lexer, options
processor.process
# TODO: feature/interpreter-return
# return_value.value if FixNum, otherwise bool cast, otherwise 0
