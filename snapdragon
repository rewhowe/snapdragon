#!/usr/bin/env ruby

require_relative File.join('src', 'lexer.rb')
require_relative File.join('src', 'colour_string.rb')

OPTIONS = {
  debug: false,
}

filename = nil

ARGV.each do |arg|
  case arg
  when '-d', '--debug'
    OPTIONS[:debug] = true
  else
    if (arg =~ /^-/).nil? && filename.nil?
      filename = arg
    end
  end
end

if filename.nil? || !File.exist?(filename)
  raise "Input file (#{filename}) not found"
end

tokens = Lexer::tokenize(filename, OPTIONS)

if OPTIONS[:debug]
  puts 'Tokens:'
  tokens.each { |token| puts token.type.to_s.yellow + ': ' + token.content.to_s }
end
# TODO: send tokens to transpiler... also find a better name for transpiler
